apiVersion: v1
kind: Service
metadata:
  name: knowledgeaccessapi-service-ha
spec:
  type: NodePort
  ports:
   - name: "http-port"
     protocol: "TCP"
     port: 8080
     targetPort: 8080
  selector:
    app: knowledgeaccessapi
---
apiVersion: v1
kind: Service
metadata:
  name: knowledgeaccessapi-service
spec:
  type: ClusterIP
  ports:
   - name: "http-port"
     protocol: "TCP"
     port: 8080
     targetPort: 8080
  selector:
    app: knowledgeaccessapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 
    knowledgeaccessapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: knowledgeaccessapi
  template:
    metadata:
      labels:
        app: knowledgeaccessapi
    spec:
      containers:
      - name: apserver
        image: springio/gs-spring-boot-docker
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
          - name: MYSQL_HOST
            value: mysql:3306
          # - name: SPRING_PROFILES_ACTIVE
          #   value: "prd"
          # - name: DB_URL
          #   value: "jdbc:mysql://mysql/db_example"
          # - name: PIC_DIR
          #   value: "/Users/matsumotoyuison/MyApplication/todo2020/Backend/data"
          # - name: REDIS_HOST
          #   value: "sbdemo-redis-service"
          # - name: REDIS_PORT
          #   value: "6379"     
        # volumeMounts:
        #   - mountPath: "/Users/matsumotoyuison/MyApplication/todo2020/Backend/data"
        #     name: apserver-pvc
      # volumes:
      # - name: todoaccessapi-pvc
      #   persistentVolumeClaim:
      #     claimName: todoaccessapi-pvc